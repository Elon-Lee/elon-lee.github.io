<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java解析XMl重型武器JAXB详解</title>
      <link href="/2022/12/07/ji-zhu/java/j2ee-chong-xing-wu-qi-jaxb-jie-xi-xml/"/>
      <url>/2022/12/07/ji-zhu/java/j2ee-chong-xing-wu-qi-jaxb-jie-xi-xml/</url>
      
        <content type="html"><![CDATA[<blockquote><p><code>简述</code> : JDK早期版本就自带JAXB转换功能,一直以来都是JAVA集大成之作,可所谓是JAVA之重器,但是很多时候我们使用过程中并不需要太过复杂可能只是简单的XML序列化和反序列化,今天我就解析XML和生成XML过程中遇到的问题再次记录,希望更多的小伙伴能够找到问题的解决办法.</p></blockquote><p>首先是序列化XML,JAVA提供了以下注解用于描述一个实体对象转化到XML的过程</p><ol><li><p>@XmlRootElement</p><p>该注解用于类级别,对应xml的根元素,常与 @XmlType 和 @XmlAccessorType一起使用，主要的作用是映射xml的根节点,name属性标注根节点的名称.</p></li><li><p>@XmlElement<br>　将Java对象的属性映射为xml的节点，在使用@XmlElement时，可通过name属性改变java对象属性在xml中显示的名称。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@XmlElement</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"class"</span><span class="token punctuation">)</span><span class="token keyword">private</span> String clz<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>@XmlElements</p><p>　当节点下面包含多个相同的子节点时，该注解可以映射成一个JavaBean的集合属性,其中注解中value的属性对应的是一个@XmlElement的集合</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@XmlElements</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@XmlElement</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"select"</span><span class="token punctuation">,</span> type <span class="token operator">=</span> Select<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">private</span> List<span class="token operator">&lt;</span>Select<span class="token operator">></span> selects<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>@XmlAccessorType<br>　用于指定由java对象生成xml文件时对java对象属性的访问方式。常与@XmlRootElement、@XmlType一起使用。它的属性值是XmlAccessType的4个枚举值，分别为:</p><ul><li><strong>XmlAccessType.FIELD:java对象中的所有成员变量</strong></li><li><strong>XmlAccessType.PROPERTY：java对象中所有通过getter/setter方式访问的成员变量</strong></li><li><strong>XmlAccessType.PUBLIC_MEMBER：java对象中所有的public访问权限的成员变量和通过getter/setter方式访问的成员变量</strong></li><li><strong>XmlAccessType.NONE:java对象的所有属性都不映射为xml的元素</strong></li></ul><p>　　注意：@XmlAccessorType的默认访问级别是XmlAccessType.PUBLIC_MEMBER，因此，如果java对象中的private成员变量设置了public权限的getter/setter方法，就不要在private变量上使用@XmlElement和@XmlAttribute注解，否则在由java对象生成xml时会报同一个属性在java类里存在两次的错误。同理，如果@XmlAccessorType的访问权限为XmlAccessType.NONE，如果在java的成员变量上使用了@XmlElement或@XmlAttribute注解，这些成员变量依然可以映射到xml文件。</p><p>　　注意：虽然@XmlAccessorType为XmlAccessType.NONE,但是在java类的私有属性上加了@XmlAttribute和@XmlElement注解后，这些私有成员会映射生成xml的元素</p></li><li><p>@XmlAccessorOrder<br>　用于对java对象生成的xml元素进行排序。它有两个属性值：<br>　AccessorOrder.ALPHABETICAL：对生成的xml元素按字母书序排序<br>　XmlAccessOrder.UNDEFINED:不排序</p></li><li><p>@XmlTransient<br>　用于标示在由java对象映射xml时，忽略此属性。即，在生成的xml文件中不出现此元素。</p></li><li><p><strong>@XmlJavaTypeAdapter</strong><br>　常用在转换比较复杂的对象时，如map类型或者格式化日期等。使用此注解时，需要自己写一个adapter类继承XmlAdapter抽象类，并实现里面的方法。</p></li><li><p>工具类示例代码</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span>Attributes<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span>InputSource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span>SAXException<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span>XMLReader<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span>XMLFilterImpl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span>XMLReaderFactory<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>JAXBContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>Marshaller<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>Unmarshaller<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>sax<span class="token punctuation">.</span>SAXSource<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>StringReader<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>StringWriter<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Jaxb2工具类 * * @author zhuc * @create 2013-3-29 下午2:40:14 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JaxbUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * JavaBean转换成xml     * 默认编码UTF-8     *     * @param obj     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">convertToXml</span><span class="token punctuation">(</span>Object obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">convertToXml</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * JavaBean转换成xml     *     * @param obj     * @param encoding     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">convertToXml</span><span class="token punctuation">(</span>Object obj<span class="token punctuation">,</span> String encoding<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            JAXBContext context <span class="token operator">=</span> JAXBContext<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Marshaller marshaller <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">createMarshaller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            marshaller<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Marshaller<span class="token punctuation">.</span>JAXB_FORMATTED_OUTPUT<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            marshaller<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Marshaller<span class="token punctuation">.</span>JAXB_ENCODING<span class="token punctuation">,</span> encoding<span class="token punctuation">)</span><span class="token punctuation">;</span>            StringWriter writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            marshaller<span class="token punctuation">.</span><span class="token function">marshal</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> writer<span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 读取XML-可配置忽略命名空间     *     * @param type            类型     * @param &lt;T>             数据类型     * @return 数据对象     * @author chang.xu     */</span>    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">converyToJavaBean</span><span class="token punctuation">(</span>String xml<span class="token punctuation">,</span> <span class="token keyword">final</span> Class<span class="token operator">&lt;</span>T<span class="token operator">></span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>        T objResult <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            JAXBContext context <span class="token operator">=</span> JAXBContext<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>            Unmarshaller unmarshaller <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">createUnmarshaller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            XMLReader reader <span class="token operator">=</span> XMLReaderFactory<span class="token punctuation">.</span><span class="token function">createXMLReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            NamespaceFilter inFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NamespaceFilter</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            inFilter<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span>            StringReader stringReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringReader</span><span class="token punctuation">(</span>xml<span class="token punctuation">)</span><span class="token punctuation">;</span>            SAXSource source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SAXSource</span><span class="token punctuation">(</span>inFilter<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">InputSource</span><span class="token punctuation">(</span>stringReader<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            objResult <span class="token operator">=</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span> unmarshaller<span class="token punctuation">.</span><span class="token function">unmarshal</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> objResult<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 跳过namespace校验     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">NamespaceFilter</span> <span class="token keyword">extends</span> <span class="token class-name">XMLFilterImpl</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String usedNamespaceUri<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token keyword">boolean</span> addNamespace<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//State variable</span>        <span class="token keyword">private</span> <span class="token keyword">boolean</span> addedNamespace <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">NamespaceFilter</span><span class="token punctuation">(</span>String namespaceUri<span class="token punctuation">,</span>                               <span class="token keyword">boolean</span> addNamespace<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>addNamespace<span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>usedNamespaceUri <span class="token operator">=</span> namespaceUri<span class="token punctuation">;</span>            <span class="token keyword">else</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>usedNamespaceUri <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>addNamespace <span class="token operator">=</span> addNamespace<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> SAXException <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">startDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>addNamespace<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">startControlledPrefixMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startElement</span><span class="token punctuation">(</span>String arg0<span class="token punctuation">,</span> String arg1<span class="token punctuation">,</span> String arg2<span class="token punctuation">,</span>                                 Attributes arg3<span class="token punctuation">)</span> <span class="token keyword">throws</span> SAXException <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">startElement</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usedNamespaceUri<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">,</span> arg3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endElement</span><span class="token punctuation">(</span>String arg0<span class="token punctuation">,</span> String arg1<span class="token punctuation">,</span> String arg2<span class="token punctuation">)</span>                <span class="token keyword">throws</span> SAXException <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">endElement</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usedNamespaceUri<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startPrefixMapping</span><span class="token punctuation">(</span>String prefix<span class="token punctuation">,</span> String url<span class="token punctuation">)</span>                <span class="token keyword">throws</span> SAXException <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>addNamespace<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startControlledPrefixMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//Remove the namespace, i.e. don´t call startPrefixMapping for parent!</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">startControlledPrefixMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> SAXException <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>addNamespace <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>addedNamespace<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//We should add namespace since it is set and has not yet been done.</span>                <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">startPrefixMapping</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usedNamespaceUri<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//Make sure we dont do it twice</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>addedNamespace <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p><strong>以上内容是JAXB的基本用法和JAXBUtil工具类</strong></p><p>避坑1:</p><blockquote><p>这里我需要重点介绍 <code>工具类</code> NamespaceFilter的用法,很多情况下我们在解析XML到Java对象的时候</p><p>会遇到XML带有命名空间比如 </p><messages xmlns="http://www.neusoft.com/hit/rhin" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemalocation="http://www.neusoft.com/hit/rhin file:///e:/request_message.xsd"><p>类似这种申明直接反序列化会报错:</p><p>javax.xml.bind.UnmarshalException: unexpected element (uri:””, local:”messages”). Expected elements are &lt;{<a href="http://www.neusoft.com/hit/rhin%7Dmessages>" target="_blank" rel="noopener">http://www.neusoft.com/hit/rhin}messages&gt;</a><br>    at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:712)</p><p>NamespaceFilter提供了自定义SAXReader解析器的方法跳过命名空间可以正常解析XML</p></messages></blockquote><p>避坑2:</p><p>如果你希望转换到XML输出空节点,那么对象的property一定要赋初始值,比如String对象赋””</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>XmlAccessType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>XmlAccessorType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>XmlRootElement<span class="token punctuation">;</span><span class="token annotation punctuation">@XmlRootElement</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"messages"</span> <span class="token punctuation">)</span><span class="token annotation punctuation">@XmlAccessorType</span><span class="token punctuation">(</span>XmlAccessType<span class="token punctuation">.</span>PROPERTY<span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResponseMessage</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Switchset switchset <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Switchset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> Business business <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Business</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> Extendset extendset <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Extendset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Extendset</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String token <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Business</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String standardcode <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> Returnmessage returnmessage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Returnmessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> Returnset returnset <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Returnset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String datacompress <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> Businessdata businessdata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Businessdata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Businessdata</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String taskid <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Returnset</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String rettotal <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String retpaging <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String retpageindex <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String retpageset <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Returnmessage</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String retcode <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String rettext <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Switchset</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> Visitor visitor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Visitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> Serviceinf serviceinf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Serviceinf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> Provider provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Provider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String route <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String process <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> Switchmessage switchmessage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Switchmessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Switchmessage</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String messagecode <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String messagetext <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Provider</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String targetorgan <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String targetdomain <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Serviceinf</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String servicecode <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Visitor</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String sourceorgan <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String sourcedomain <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成的XML格式如下:</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>messages</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>business</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>businessdata</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>taskid</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>taskid</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>businessdata</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datacompress</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datacompress</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returnmessage</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>retcode</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>retcode</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rettext</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rettext</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returnmessage</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returnset</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>retpageindex</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>retpageindex</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>retpageset</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>retpageset</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>retpaging</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>retpaging</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rettotal</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rettotal</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returnset</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>standardcode</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>standardcode</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>business</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extendset</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>token</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>token</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extendset</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>switchset</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>process</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>process</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>provider</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetdomain</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetdomain</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetorgan</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetorgan</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>provider</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>route</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>route</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>serviceinf</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servicecode</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servicecode</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>serviceinf</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>switchmessage</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>messagecode</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>messagecode</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>messagetext</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>messagetext</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>switchmessage</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>visitor</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sourcedomain</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sourcedomain</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sourceorgan</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sourceorgan</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>visitor</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>switchset</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>messages</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>希望这篇文章能够帮助到你,如果你有以为可以随时联系我!</p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎样才能学好英文?</title>
      <link href="/2022/11/22/ying-yu/my-first-english-blog/"/>
      <url>/2022/11/22/ying-yu/my-first-english-blog/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><code>大多数情况下你在做一件事情的过程中之所以目标不够明确,最大的问题可能就在于不善于总结,</code></p><p><code>学过的知识也是比较零散,所以知识体系的建立势在必行.</code></p><blockquote><p>学英语和学其它任何一门语言一样也是在于听到读出来最后再是写出来,</p><p>所以需要做大量的阅读,大量的听力,大量的朗读,练习英语预感,找到母语者</p><p>的发音习惯真正去融入到一门语言当中去</p></blockquote><h3 id="学习步骤"><a href="#学习步骤" class="headerlink" title="学习步骤"></a>学习步骤</h3><ol><li><p>分级阅读,每天练习一篇英文文章,最好能从level比较低的开始比如牛津书虫是我推荐,</p><p>也是我正在读的英文书籍,里面包含了大量的有趣的短文故事,可以快速增加你的词汇量</p><p>和预感能力</p></li><li><p>新概念练习,每天练习一篇新概念习题,新概念可以由浅入深的将你的语法提高起来,当然</p></li><li><p>这个过程是漫长的需要不断积累不断实践.</p></li></ol><h3 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h3><p><a href="http://www.youtube.com/" target="_blank" rel="noopener">推荐上油管去学习</a></p><p><a href="www.bilibli.com">推荐上B站去学习</a></p><p><a href="www.ted.com">推荐上Ted去学习</a></p><p><img src="https://gcore.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gcore.jsdelivr.net/gh/Elon-Lee/Pic-Go/blog/202211222349188.webp" alt="最后分享一张美图"></p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA设计模式之(单例模式)</title>
      <link href="/2022/11/17/ji-zhu/java/java-she-ji-mo-shi-zhi-dan-li-mo-shi/"/>
      <url>/2022/11/17/ji-zhu/java/java-she-ji-mo-shi-zhi-dan-li-mo-shi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Markdown 语法详解</title>
      <link href="/2022/11/17/ji-zhu/hexo-markdown-grammer/"/>
      <url>/2022/11/17/ji-zhu/hexo-markdown-grammer/</url>
      
        <content type="html"><![CDATA[<h3 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h3><ul><li><p>按键样式</p><kbd style="border:1px solid gray;font-size:1.2em;box-shadow:1px 0 1px 0 #eee, 0 2px 0 2px #ccc, 0 2px 0 3px #444;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin:2px 3px;padding:1px 5px;">Ctrl</kbd> / <kbd style="border:1px solid gray;font-size:1.2em;box-shadow:1px 0 1px 0 #eee, 0 2px 0 2px #ccc, 0 2px 0 3px #444;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin:2px 3px;padding:1px 5px;">Command⌘</kbd> +  <kbd style="border:1px solid gray;font-size:1.2em;box-shadow:1px 0 1px 0 #eee, 0 2px 0 2px #ccc, 0 2px 0 3px #444;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin:2px 3px;padding:1px 5px;">A</kbd> </li><li><p>标注颜色</p><p><code>here it is</code></p></li><li><p>加粗</p><p><strong>加粗文本</strong></p></li><li><p>删除文本</p><p><del>删除文本</del></p></li><li><p>引用文本</p><blockquote><p>引用名人名句</p></blockquote></li></ul><h3 id="插入链接或图片"><a href="#插入链接或图片" class="headerlink" title="插入链接或图片"></a>插入链接或图片</h3><ol><li><p>插入链接</p><p>链接: <a href="https://www.csdn.net/" target="_blank" rel="noopener">link</a>.</p></li><li><p>插入图片</p><p><img src="https://gcore.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw" alt="Alt"></p></li></ol><h3 id="插入一段代码"><a href="#插入一段代码" class="headerlink" title="插入一段代码"></a>插入一段代码</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// An highlighted block</span><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token string">'bar'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="生成一个列表"><a href="#生成一个列表" class="headerlink" title="生成一个列表"></a>生成一个列表</h3><ul><li>项目<ul><li>项目<ul><li>项目</li></ul></li></ul></li></ul><ol><li>项目1</li><li>项目2</li><li>项目3</li></ol><h3 id="创建一个表格"><a href="#创建一个表格" class="headerlink" title="创建一个表格"></a>创建一个表格</h3><p>使用<code>:---------:</code>居中<br>使用<code>:----------</code>居左<br>使用<code>----------:</code>居右</p><table><thead><tr><th align="center">第一列</th><th align="right">第二列</th><th align="left">第三列</th></tr></thead><tbody><tr><td align="center">第一列文本居中</td><td align="right">第二列文本居右</td><td align="left">第三列文本居左</td></tr></tbody></table><table><thead><tr><th>TYPE</th><th>ASCII</th><th>HTML</th></tr></thead><tbody><tr><td>Single backticks</td><td><code>'Isn't this fun?'</code></td><td>‘Isn’t this fun?’</td></tr><tr><td>Quotes</td><td><code>"Isn't this fun?"</code></td><td>“Isn’t this fun?”</td></tr><tr><td>Dashes</td><td><code>-- is en-dash, --- is em-dash</code></td><td>– is en-dash, — is em-dash</td></tr></tbody></table><h3 id="创建一个注脚"><a href="#创建一个注脚" class="headerlink" title="创建一个注脚"></a>创建一个注脚</h3><p>一个具有注脚的文本。<a href="%E6%B3%A8%E8%84%9A%E7%9A%84%E8%A7%A3%E9%87%8A">^2</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
